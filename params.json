{"name":"Hamstring","tagline":"Tools for generating and decoding error-correcting DNA barcodes","body":"This python module generates, checks, and corrects quaternary Hamming barcodes. The theory for generating quaternary (DNA) Hamming barcodes comes from the publication [Bystrykh, L. V. (2012). Generalized DNA Barcode Design Based on Hamming Codes. PLoS ONE](http://www.plosone.org/article/info:doi/10.1371/journal.pone.0036852). Currently, the `hamstring` module only works with Hamming7,4 encoding, but may be generalized to other sizes of data and parity bits. \r\n\r\n## Usage\r\n\r\n**Generate Hamming DNA barcodes**\r\n\r\n    generateBarcodes.py [-h] out\r\n\r\n    arguments:\r\n      out         output barcode file name\r\n      -h, --help  show this help message and exit\r\n\r\nexample output:\r\n    \r\n    index base4 nucleotide gc\r\n    0 0000000 AAAAAAA 0.0\r\n    1 3303001 TTATAAC 0.14\r\n    2 2202002 GGAGAAG 0.57\r\n    3 1101003 CCACAAT 0.43\r\n    4 0303010 ATATACA 0.14\r\n\r\n**Checksum a list of Hamming DNA barcodes**\r\n\r\n    checkBarcodes.py [-h] list\r\n\r\n    arguments:\r\n      list        list of barcodes to check, one per line\r\n      -h, --help  show this help message and exit\r\n\r\nexample output:\r\n\r\n    in\tfixed\tchecksum\r\n    ATAACT\tCAAAACT\tA > T at pos 3\r\n    AGAGAGA\tAGAGAGA\tok\r\n    TCACAGC\tTCACAGC\tok\r\n    GAACAGG\tGAAAAGG\tA > C at pos 4\r\n    CTATAGT\tCTATAGT\tok\r\n    TTTAAAN\tNNNNNNN\tbad\r\n    NNNNNNN\tNNNNNNN\tbad\r\n\r\n**Tag fastq reads with a barcode (for generating a simulated dataset)**\r\n\r\n    tagReads.py [-h] nb fastq out\r\n\r\n    arguments:\r\n      nb          number of barcodes to generate\r\n      fastq       fastq file to process\r\n      out         name for new fastq file\r\n      -h, --help  show this help message and exit\r\n\r\nexample input:\r\n\r\n    @HWI-EAS179_0001:5:1:7:119#0/1\r\n    CAGGGCGCGAATGNTTTGAGAGGGANATTGGAAANNNNNGATAGANNGGNCTATNNTGNNNNNNNNNNNNNNNNNN\r\n    +\r\n    HIHHHGHHHFDHH#EHHH?HHHDH>#DGGG@7@?##########################################\r\n\r\nexample output:\r\n\r\n    @HWI-EAS179_0001:5:1:7:119#0/1\r\n    CCATGGCCAGGGCGCGAATGNTTTGAGAGGGANATTGGAAANNNNNGATAGANNGGNCTATNNTGNNNNNNNNNNNNNNNNNN\r\n    +\r\n    HHHHHHHHIHHHGHHHFDHH#EHHH?HHHDH>#DGGG@7@?##########################################\r\n\r\n**Check and fix barcodes in fastq file**\r\n\r\n    fixFastq.py [-h] list fastq out\r\n\r\n    arguments:\r\n      list        list of barcodes used in experiment, one per line\r\n      fastq       fastq file to process\r\n      out         name for new fastq file\r\n      -h, --help  show this help message and exit\r\n\r\nexample input:\r\n\r\n    @HWI-EAS179_0001:5:1:7:119#0/1\r\n    GCATGGCCAGGGCGCGAATGNTTTGAGAGGGANATTGGAAANNNNNGATAGANNGGNCTATNNTGNNNNNNNNNNNNNNNNNN\r\n    +\r\n    HHHHHHHHIHHHGHHHFDHH#EHHH?HHHDH>#DGGG@7@?##########################################\r\n\r\nexample output:\r\n\r\n    @HWI-EAS179_0001:5:1:7:119#0/1\r\n    CCATGGCCAGGGCGCGAATGNTTTGAGAGGGANATTGGAAANNNNNGATAGANNGGNCTATNNTGNNNNNNNNNNNNNNNNNN\r\n    +\r\n    HHHHHHHHIHHHGHHHFDHH#EHHH?HHHDH>#DGGG@7@?##########################################\r\n\r\n## Requirements\r\n\r\n- Python 2.7\r\n- BioPython module required for fixFastq.py\r\n\r\n## Hamstring Module\r\n\r\nThe core hamstring module has no external module dependencies and should run under any OS.\r\n\r\n`base4Encode(n,d)` is used to convert decimal notation *n* to quaternary notation with *d* leading digits. *example*: \r\n\r\n    hamstring.base4Encode(22, 4)\r\n    [0, 1, 1, 2]\t    \r\n\r\n`generateHamming(data,parity)` is used to generate DNA quaternary Hamming codes from list of quaternary digits *data* with *parity* number of parity bits.\r\n*example*:\r\n\r\n    hamstring.generateHamming([0,1,1,2],3)\r\n    {'parity': [1, 1, 0], 'nucleotide': 'CCAACCG', 'data': [0, 1, 1, 2], 'base4': '1100112'}\r\n\r\n`decodeHamming(barcode,parity)` is used to decode *barcode* nucleotide Hamming string with *parity* number of parity bits, and perform error correction if needed.\r\n*example*:\r\n\r\n    hamstring.decodeHamming('CCAACCG',3)\r\n    {'nucleotide': 'CCAACCG', 'chksum': 'ok'}\r\n\r\n    hamstring.decodeHamming('CCATCCG',3)\r\n    {'nucleotide': 'CCAACCG', 'chksum': 'T to A at 4'}\r\n\r\n    hamstring.decodeHamming('CCANCCG',3)\r\n    {'nucleotide': 'NNNNNNN', 'chksum': 'bad'}\r\n\r\n## License Information\r\n\r\nThis work is covered under the GPLv3\r\n\r\nMatt Shirley - mdshw5'at'gmail'.'com - [http://mattshirley.com](http://mattshirley.com)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}